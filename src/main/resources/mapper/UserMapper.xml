<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.winterchen.dao.UserDao" >
  <sql id="BASE_TABLE">
    t_user
  </sql>

  <sql id="BASE_COLUMN">
    userId,userName,password,phone
  </sql>

<!--  <insert id="insert" parameterType="com.winterchen.model.UserDomain">
    INSERT INTO
      <include refid="BASE_TABLE"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      userName,password,
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
      #{userName, jdbcType=VARCHAR},#{password, jdbcType=VARCHAR},
      <if test="phone != null">
        #{phone, jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>-->

  <select id="selectUsers" resultType="com.winterchen.model.UserDomain">
      SELECT
        <include refid="BASE_COLUMN"/>
      FROM
        <include refid="BASE_TABLE"/>
  </select>

  <insert id="addUser" parameterType="com.winterchen.model.User">
        insert into user(user_name,user_password,user_real_name,user_phone,user_status,enterprise_id,update_time)
        value(#{user_name},#{user_password},#{user_real_name},#{user_phone},#{user_status},#{enterprise_id},now())
  </insert>

  <select id="getUsersByUser" parameterType="com.winterchen.model.User" resultType="com.winterchen.model.User">
        select * from user where 1=1
        <if test="user_name!=null">
          and user_name=#{user_name}
        </if>
        <if test="user_password!=null">
          and user_password=#{user_password}
        </if>
        <if test="user_status!=null">
          and user_status=#{user_status}
        </if>
        <if test="user_id!=null">
          and user_id=#{user_id}
        </if>
        <if test="enterprise_id!=null">
          and enterprise_id=#{enterprise_id}
        </if>
         order by update_time desc
  </select>

  <update id="updateById" parameterType="com.winterchen.model.User">
    update user set user_name=#{user_name},user_password=#{user_password},user_real_name=#{user_real_name},user_phone=#{user_phone},user_status=#{user_status},enterprise_id=#{enterprise_id}
     where user_id=#{user_id}
  </update>

    <delete id="deleteByIds">
        delete from user where user_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="editStatus">
        update user set user_status=#{status} where user_id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <delete id="deleteByEnterpriseId">
        delete from `user` where  enterprise_id=#{id}
    </delete>
</mapper>